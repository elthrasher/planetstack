// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`API Gateway returns a websocket api 1`] = `
Object {
  "Parameters": Any<Object>,
  "Resources": Object {
    "AccessLogs8B620ECA": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "Account": Object {
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "CWRole7EC94C1E",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "AddModel": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "ContentType": "application/json",
        "Name": "AddModel",
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "action": Object {
              "enum": Array [
                "addIcon",
              ],
            },
            "icon": Object {
              "properties": Object {
                "id": Object {
                  "type": "string",
                },
                "img": Object {
                  "type": "number",
                },
                "x": Object {
                  "type": "number",
                },
                "y": Object {
                  "type": "number",
                },
              },
              "required": Array [
                "img",
                "x",
                "y",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "action",
            "icon",
          ],
          "title": "AddSchema",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGatewayV2::Model",
    },
    "Authorizer": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "AuthorizerType": "REQUEST",
        "AuthorizerUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "authorizerFunction307320B0",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
        "Name": "WebSocketApiAuthorizer",
      },
      "Type": "AWS::ApiGatewayV2::Authorizer",
    },
    "CWRole7EC94C1E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "ChangeBackgroundModel": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "ContentType": "application/json",
        "Name": "ChangeBackgroundModel",
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "action": Object {
              "enum": Array [
                "changeBackground",
              ],
            },
            "bg": Object {
              "type": "number",
            },
          },
          "required": Array [
            "action",
            "bg",
          ],
          "title": "ChangeBackgroundSchema",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGatewayV2::Model",
    },
    "DeleteModel": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "ContentType": "application/json",
        "Name": "DeleteModel",
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "action": Object {
              "enum": Array [
                "deleteIcon",
              ],
            },
            "id": Object {
              "type": "string",
            },
          },
          "required": Array [
            "action",
            "id",
          ],
          "title": "DeleteSchema",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGatewayV2::Model",
    },
    "DevStage520A913F": Object {
      "Properties": Object {
        "AccessLogSettings": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "AccessLogs8B620ECA",
              "Arn",
            ],
          },
          "Format": "$context.identity.sourceIp - - [$context.requestTime] \\"$context.httpMethod $context.routeKey $context.protocol\\" $context.status $context.responseLength $context.requestId",
        },
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "AutoDeploy": true,
        "DefaultRouteSettings": Object {
          "DataTraceEnabled": true,
          "LoggingLevel": "INFO",
          "ThrottlingBurstLimit": 500,
          "ThrottlingRateLimit": 1000,
        },
        "StageName": "dev",
      },
      "Type": "AWS::ApiGatewayV2::Stage",
    },
    "ExecutionLogs6FEE23C8": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/apigateway/",
              Object {
                "Ref": "WebSocketApi34BCF99B",
              },
              "/dev",
            ],
          ],
        },
        "RetentionInDays": 7,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "GetStateModel": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "ContentType": "application/json",
        "Name": "GetStateModel",
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "action": Object {
              "enum": Array [
                "getState",
              ],
            },
          },
          "required": Array [
            "action",
          ],
          "title": "GetStateSchema",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGatewayV2::Model",
    },
    "MoveModel": Object {
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "ContentType": "application/json",
        "Name": "MoveModel",
        "Schema": Object {
          "$schema": "http://json-schema.org/draft-04/schema#",
          "properties": Object {
            "action": Object {
              "enum": Array [
                "moveIcon",
              ],
            },
            "icon": Object {
              "properties": Object {
                "id": Object {
                  "type": "string",
                },
                "img": Object {
                  "type": "number",
                },
                "x": Object {
                  "type": "number",
                },
                "y": Object {
                  "type": "number",
                },
              },
              "required": Array [
                "img",
                "x",
                "y",
              ],
              "type": "object",
            },
          },
          "required": Array [
            "action",
            "icon",
          ],
          "title": "MoveSchema",
          "type": "object",
        },
      },
      "Type": "AWS::ApiGatewayV2::Model",
    },
    "WebSocketApi34BCF99B": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "Name": "WebSocketApi",
        "ProtocolType": "WEBSOCKET",
        "RouteSelectionExpression": "$request.body.action",
      },
      "Type": "AWS::ApiGatewayV2::Api",
    },
    "WebSocketApiaddIconRouteEBADD1DC": Object {
      "DependsOn": Array [
        "Account",
        "AddModel",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "ModelSelectionExpression": "$request.body.action",
        "RequestModels": Object {
          "addIcon": "AddModel",
        },
        "RouteKey": "addIcon",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "WebSocketApiaddIconRouteaddIconIntegration435C822F",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "WebSocketApiaddIconRouteaddIconIntegration435C822F": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "addIconFunction4EE4E627",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "WebSocketApiaddIconRouteaddIconIntegrationPermissionE64F1927": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "addIconFunction4EE4E627",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "WebSocketApi34BCF99B",
              },
              "/*/*addIcon",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebSocketApichangeBackgroundRouteCB345709": Object {
      "DependsOn": Array [
        "Account",
        "ChangeBackgroundModel",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "ModelSelectionExpression": "$request.body.action",
        "RequestModels": Object {
          "changeBackground": "ChangeBackgroundModel",
        },
        "RouteKey": "changeBackground",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "WebSocketApichangeBackgroundRoutechangeBackgroundIntegration392CEB9D",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "WebSocketApichangeBackgroundRoutechangeBackgroundIntegration392CEB9D": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "changeBackgroundFunction2B84D2FD",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "WebSocketApichangeBackgroundRoutechangeBackgroundIntegrationPermission237709B1": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "changeBackgroundFunction2B84D2FD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "WebSocketApi34BCF99B",
              },
              "/*/*changeBackground",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebSocketApiconnectRoute846149DD": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "AuthorizationType": "CUSTOM",
        "AuthorizerId": Object {
          "Ref": "Authorizer",
        },
        "RouteKey": "$connect",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "WebSocketApiconnectRouteOnConnectIntegration50849185",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "WebSocketApiconnectRouteOnConnectIntegration50849185": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "onConnectFunction279CD46D",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "WebSocketApiconnectRouteOnConnectIntegrationPermission63C86F11": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "onConnectFunction279CD46D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "WebSocketApi34BCF99B",
              },
              "/*/*$connect",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebSocketApideleteIconRouteB72589AB": Object {
      "DependsOn": Array [
        "Account",
        "DeleteModel",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "ModelSelectionExpression": "$request.body.action",
        "RequestModels": Object {
          "deleteIcon": "DeleteModel",
        },
        "RouteKey": "deleteIcon",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "WebSocketApideleteIconRoutedeleteIconIntegration5684CE78",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "WebSocketApideleteIconRoutedeleteIconIntegration5684CE78": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "deleteIconFunction316C8F7A",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "WebSocketApideleteIconRoutedeleteIconIntegrationPermission2C9BC6EA": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "deleteIconFunction316C8F7A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "WebSocketApi34BCF99B",
              },
              "/*/*deleteIcon",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebSocketApidisconnectRouteC181A19C": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "RouteKey": "$disconnect",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "WebSocketApidisconnectRouteOnDisconnectIntegrationB7DBE1EF",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "WebSocketApidisconnectRouteOnDisconnectIntegrationB7DBE1EF": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "onDisconnectFunctionD5542DF7",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "WebSocketApidisconnectRouteOnDisconnectIntegrationPermission1BB6126D": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "onDisconnectFunctionD5542DF7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "WebSocketApi34BCF99B",
              },
              "/*/*$disconnect",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebSocketApigetStateRouteBFF18CEB": Object {
      "DependsOn": Array [
        "Account",
        "GetStateModel",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "ModelSelectionExpression": "$request.body.action",
        "RequestModels": Object {
          "getState": "GetStateModel",
        },
        "RouteKey": "getState",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "WebSocketApigetStateRoutegetStateIntegration5D9A4675",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "WebSocketApigetStateRoutegetStateIntegration5D9A4675": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "getStateFunction1C5566DE",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "WebSocketApigetStateRoutegetStateIntegrationPermission568B1F63": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "getStateFunction1C5566DE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "WebSocketApi34BCF99B",
              },
              "/*/*getState",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "WebSocketApimoveIconRoute523F71A8": Object {
      "DependsOn": Array [
        "Account",
        "MoveModel",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "ModelSelectionExpression": "$request.body.action",
        "RequestModels": Object {
          "moveIcon": "MoveModel",
        },
        "RouteKey": "moveIcon",
        "Target": Object {
          "Fn::Join": Array [
            "",
            Array [
              "integrations/",
              Object {
                "Ref": "WebSocketApimoveIconRoutemoveIconIntegration9DF3EE85",
              },
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Route",
    },
    "WebSocketApimoveIconRoutemoveIconIntegration9DF3EE85": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "ApiId": Object {
          "Ref": "WebSocketApi34BCF99B",
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":apigateway:us-east-1:lambda:path/2015-03-31/functions/",
              Object {
                "Fn::GetAtt": Array [
                  "moveIconFunctionB9241170",
                  "Arn",
                ],
              },
              "/invocations",
            ],
          ],
        },
      },
      "Type": "AWS::ApiGatewayV2::Integration",
    },
    "WebSocketApimoveIconRoutemoveIconIntegrationPermissionAA0F7FD1": Object {
      "DependsOn": Array [
        "Account",
      ],
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "moveIconFunctionB9241170",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "WebSocketApi34BCF99B",
              },
              "/*/*moveIcon",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "addIconFunction4EE4E627": Object {
      "DependsOn": Array [
        "addIconFunctionServiceRoleDefaultPolicy1634626F",
        "addIconFunctionServiceRole8C1DB12B",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "addIconFunctionServiceRole8C1DB12B",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "addIconFunctionServiceRole8C1DB12B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "addIconFunctionServiceRoleDefaultPolicy1634626F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:execute-api:undefined:undefined:",
                    Object {
                      "Ref": "WebSocketApi34BCF99B",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "addIconFunctionServiceRoleDefaultPolicy1634626F",
        "Roles": Array [
          Object {
            "Ref": "addIconFunctionServiceRole8C1DB12B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "authorizerFunction307320B0": Object {
      "DependsOn": Array [
        "authorizerFunctionServiceRoleE6AAF541",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "authorizerFunctionServiceRoleE6AAF541",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "authorizerFunctionAuthZPermission5EA8CE1A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "authorizerFunction307320B0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-east-1:123456789:",
              Object {
                "Ref": "WebSocketApi34BCF99B",
              },
              "/authorizers/",
              Object {
                "Ref": "Authorizer",
              },
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "authorizerFunctionServiceRoleE6AAF541": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "changeBackgroundFunction2B84D2FD": Object {
      "DependsOn": Array [
        "changeBackgroundFunctionServiceRoleDefaultPolicy58777BF1",
        "changeBackgroundFunctionServiceRole679E1E93",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "changeBackgroundFunctionServiceRole679E1E93",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "changeBackgroundFunctionServiceRole679E1E93": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "changeBackgroundFunctionServiceRoleDefaultPolicy58777BF1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:execute-api:undefined:undefined:",
                    Object {
                      "Ref": "WebSocketApi34BCF99B",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "changeBackgroundFunctionServiceRoleDefaultPolicy58777BF1",
        "Roles": Array [
          Object {
            "Ref": "changeBackgroundFunctionServiceRole679E1E93",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "deleteIconFunction316C8F7A": Object {
      "DependsOn": Array [
        "deleteIconFunctionServiceRoleDefaultPolicy22E6821B",
        "deleteIconFunctionServiceRole01CCD8F3",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "deleteIconFunctionServiceRole01CCD8F3",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "deleteIconFunctionServiceRole01CCD8F3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "deleteIconFunctionServiceRoleDefaultPolicy22E6821B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:execute-api:undefined:undefined:",
                    Object {
                      "Ref": "WebSocketApi34BCF99B",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "deleteIconFunctionServiceRoleDefaultPolicy22E6821B",
        "Roles": Array [
          Object {
            "Ref": "deleteIconFunctionServiceRole01CCD8F3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "getStateFunction1C5566DE": Object {
      "DependsOn": Array [
        "getStateFunctionServiceRoleDefaultPolicyEC76E2CF",
        "getStateFunctionServiceRole7BBA9E9C",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "getStateFunctionServiceRole7BBA9E9C",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "getStateFunctionServiceRole7BBA9E9C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "getStateFunctionServiceRoleDefaultPolicyEC76E2CF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:execute-api:undefined:undefined:",
                    Object {
                      "Ref": "WebSocketApi34BCF99B",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "getStateFunctionServiceRoleDefaultPolicyEC76E2CF",
        "Roles": Array [
          Object {
            "Ref": "getStateFunctionServiceRole7BBA9E9C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "moveIconFunctionB9241170": Object {
      "DependsOn": Array [
        "moveIconFunctionServiceRoleDefaultPolicy280FFE37",
        "moveIconFunctionServiceRole888B0F67",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "moveIconFunctionServiceRole888B0F67",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "moveIconFunctionServiceRole888B0F67": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "moveIconFunctionServiceRoleDefaultPolicy280FFE37": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:ManageConnections",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:execute-api:undefined:undefined:",
                    Object {
                      "Ref": "WebSocketApi34BCF99B",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "moveIconFunctionServiceRoleDefaultPolicy280FFE37",
        "Roles": Array [
          Object {
            "Ref": "moveIconFunctionServiceRole888B0F67",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "onConnectFunction279CD46D": Object {
      "DependsOn": Array [
        "onConnectFunctionServiceRole23446B74",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "onConnectFunctionServiceRole23446B74",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "onConnectFunctionServiceRole23446B74": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "onDisconnectFunctionD5542DF7": Object {
      "DependsOn": Array [
        "onDisconnectFunctionServiceRoleAE265B92",
      ],
      "Properties": Object {
        "Code": Any<Object>,
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "onDisconnectFunctionServiceRoleAE265B92",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "onDisconnectFunctionServiceRoleAE265B92": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
